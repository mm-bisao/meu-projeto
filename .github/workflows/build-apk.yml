name: Build APK

on: 
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checar código
        uses: actions/checkout@v4

      - name: Instalar dependências do sistema
        run: |
          sudo apt update
          sudo apt install -y python3-pip ffmpeg libncurses-dev libffi-dev libssl-dev libnss3 unzip curl openjdk-8-jdk

      - name: Configurar JDK 8
        run: |
          # Definir as variáveis de ambiente para o JDK 8
          export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Aceitar Licenças do Android SDK
        run: yes | $HOME/android-sdk/tools/bin/sdkmanager --licenses
       
      - name: Instalar Buildozer
        run: |
          pip install --upgrade cython
          pip install buildozer

      - name: Baixar e Instalar Android SDK Completo
        run: |
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk
          
          # Baixar a versão mais recente do Android SDK Command-Line Tools
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools.zip -d $HOME/android-sdk
          rm commandlinetools.zip
          
          # Verificar se sdkmanager foi instalado corretamente
          if [ ! -f "$HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "Erro: sdkmanager não encontrado!"
            ls -la $HOME/android-sdk/cmdline-tools/latest/bin/
            exit 1
          fi
          echo "sdkmanager encontrado!"

          # Adicionar sdkmanager ao PATH
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

          # Configurar variáveis de ambiente
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV

          # Instalar pacotes essenciais do SDK, incluindo uma versão estável do build-tools
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;33.0.2"

      - name: Aceitar Licenças do Android SDK
        run: yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Instalar Build-Tools e AIDL
        run: |
          # Instalar versões específicas do build-tools e do AIDL
          $HOME/android-sdk/tools/bin/sdkmanager --install "build-tools;33.0.2"
          
          # Verificar se o AIDL foi instalado corretamente
          if [ ! -f "$ANDROID_HOME/build-tools/33.0.2/aidl" ]; then
            echo "Erro: AIDL não encontrado! Tentando reinstalar build-tools..."
            $HOME/android-sdk/tools/bin/sdkmanager --install "build-tools;33.0.2"
            if [ ! -f "$ANDROID_HOME/build-tools/33.0.2/aidl" ]; then
              echo "Erro: AIDL ainda não foi instalado!"
              exit 1
            fi
          else
            echo "AIDL encontrado em: $ANDROID_HOME/build-tools/33.0.2/aidl"
          fi

      - name: Verificar SDK
        run: |
          # Verificar se sdkmanager está funcionando corretamente
          if ! $HOME/android-sdk/tools/bin/sdkmanager --list; then
            echo "Erro: sdkmanager falhou ao listar os pacotes!"
            exit 1
          fi

      - name: Construir o APK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2:$PATH
          echo "Caminho do SDK: $ANDROID_HOME"
          buildozer -v android debug

      - name: Fazer upload do APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: bin/*.apk
